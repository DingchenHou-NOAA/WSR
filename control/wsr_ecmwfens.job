#BSUB -J jwsr_ecmwfens_00
#BSUB -o LOCALPREFIXPTMP/com/output/dev/today/ecmwfens_00.o.%J
#BSUB -e LOCALPREFIXPTMP/com/output/dev/today/ecmwfens_00.o.%J
#BSUB -q "dev"
#BSUB -W "01:00"
######BSUB -R "affinity[core(1)]"
#BSUB -R "rusage[mem=500]"
#BSUB -L /bin/ksh
####BSUB -q "hpc_ibm"
######BSUB -x
# @ job_name = jwsr_ecmwfens_00
##@ output = /com/output/prod/today/ecmwfens_00.o$(jobid)
# @ output = LOCALPREFIXPTMP/com/output/dev/today/ecmwfens_00.o$(jobid)
##@ error = /com/output/prod/today/ecmwfens_00.o$(jobid)
# @ error = LOCALPREFIXPTMP/com/output/dev/today/ecmwfens_00.o$(jobid)
# @ shell = /bin/sh
# @ job_type = serial
##@ class = prodser
# @ class = dev
# @ wall_clock_limit = 01:30:00
##@ initialdir = /tmpnwprd
# @ initialdir = LOCALPREFIXPTMP/tmpnwprd
# @ notification = never
##@ resources = ConsumableCpus(1) ConsumableMemory(500 MB)
# @ resources = ConsumableMemory(500 MB)
# @ task_affinity = core(1)
##@ account_no = GEN-OPS
# @ account_no = GEN-T2O
##@ group = nwprod
# @ group = devonprod
# @ queue

mach=`uname -n`
machl=`echo $mach|cut -c1`
case $machl in
  (c)
    echo `date` job starting on cirrus
    cluster=ccs
  ;;
  (s)
    echo `date` job starting on stratus
    cluster=ccs
  ;;
  (t)
    echo `date` job starting on tide
    #export MP_TASK_AFFINITY=core
    cluster=wcoss
  ;;
  (g)
    echo `date` job starting on gyre
    cluster=wcoss
  ;;
  (*)
     echo UNKNOWN MACHINE $mach
  ;;
esac
  if [[ $cluster = ccs ]]; then
export MP_SHARED_MEMORY=yes
export MEMORY_AFFINITY=MCM
  fi

set -x
export envir=prod
export envir=dev
export cyc=00
export prev_cyc=12
export job=wsr_ecmwfens_00

  if [[ $envir != dev ]]; then

SMSNAME=%SMSNAME% export SMSNAME
SMSNODE=%SMSNODE% export SMSNODE
SMSPASS=%SMSPASS% export SMSPASS
SMS_PROG=%SMS_PROG% export SMS_PROG

SMSBIN=/nwprod/sms/bin export SMSBIN

  else

echo `date` $job job begin
echo mach=$mach machl=$machl

echo `date` before sorted environment
env|sort
echo `date` after sorted environment

echo veriables needed for dev runs begin
export DCOMROOT=/dcom
export expid=EXPID
export localprefixptmp=LOCALPREFIXPTMP
export localprefixsave=LOCALPREFIXSAVE
export SMSBIN=$localprefixsave/nwdev/control
echo variables needed for dev runs end

  fi

  if [[ $envir != dev ]]; then

/nw$envir/jobs/JWSR_ECMWFENS.sms.$envir

  else

echo `date` $job environment before
env|sort

echo `date` $job j-job before
$(LAUNCH) $localprefixsave/nw$envir/jobs/JWSR_ECMWFENS.sms.$envir
#          $localprefixsave/nw$envir/jobs/JWSR_ECMWFENS.sms.$envir
echo `date` $job j-job after

chainsubmit=LOCALCHAINOPTION
echo chainsubmit=$chainsubmit
if [[ $chainsubmit = yes ]]; then
  llsubmit LOCALPREFIXPTMP/control/wsr_prep.job
fi

echo `date` $job job end

  fi

