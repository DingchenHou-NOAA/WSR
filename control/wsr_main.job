# @ job_name = jwsr_main_00
##@ output = /com/output/prod/today/wsr_main_00.o$(jobid)
# @ output = LOCALPREFIXPTMP/com/output/dev/today/wsr_main_00.o$(jobid)
##@ error = /com/output/prod/today/wsr_main_00.o$(jobid)
# @ error = LOCALPREFIXTMP/com/output/dev/today/wsr_main_00.o$(jobid)
# @ shell = /bin/sh
# @ job_type = parallel
# @ node = 2
# @ total_tasks = 48
##@ class = prod
# @ class = dev
# @ node_usage = not_shared
# @ wall_clock_limit = 00:45:00
##@ initialdir = /tmpnwprd
# @ initialdir = LOCALPREFIXPTMP/tmpnwprd
# @ notification = never
### @ resources = ConsumableCpus(1) ConsumableMemory(500 MB)
# @ resources = ConsumableMemory(500 MB)
# @ task_affinity = core(1)
##@ account_no = GEN-OPS
# @ account_no = GEN-T2O
##@ group = nwprod
# @ group = devonprod
# @ queue

export MP_SHARED_MEMORY=yes
export MEMORY_AFFINITY=MCM

set -x
export envir=prod
export envir=dev
export cyc=00
export job=wsr_main_00

  if [[ $envir != dev ]]; then

SMSNAME=%SMSNAME% export SMSNAME
SMSNODE=%SMSNODE% export SMSNODE
SMSPASS=%SMSPASS% export SMSPASS
SMS_PROG=%SMS_PROG% export SMS_PROG

SMSBIN=/nwprod/sms/bin export SMSBIN

  else

echo `date` $job job begin

echo veriables needed for dev runs begin
export DCOMROOT=/dcom
export expid=EXPID
export localprefixptmp=LOCALPREFIXPTMP
export localprefixsave=LOCALPREFIXSAVE
export SMSBIN=$localprefixsave/nwdev/control
echo variables needed for dev runs end

  fi

  if [[ $envir != dev ]]; then

/nw$envir/jobs/JWSR_MAIN.sms.$envir

  else

echo `date` $job environment before
env|sort

echo `date` $job j-job before
$localprefixsave/nw$envir/jobs/JWSR_MAIN.sms.$envir
echo `date` $job j-job after

chainsubmit=LOCALCHAINOPTION
echo chainsubmit=$chainsubmit

echo `date` $job job end

  fi

