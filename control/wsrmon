#!/bin/sh
#
# monitor the gfs parallel ensemble
#
#
# this version uses the "today" variables to find data
# choose a current cycle and set up the date variables
#
NET=gens
echo

#
# set up the directories
#

nldir=`pwd`
nlddir=`dirname $nldir`
nldbdir=`basename $nlddir`
nldddir=`dirname $nlddir`
nlddbdir=`basename $nldddir`
echo nldir=$nldir
echo nlddir=$nlddir
echo nldbdir=$nldbdir
echo nldddir=$nldddir
echo nlddbdir=$nlddbdir

callstring=`echo $*|tr " " "."`.`basename $0`
envir=`echo $nldbdir|cut -c3-`
echo callstring=$callstring envir=$envir

expid=$nlddbdir
id=`echo $expid|cut -c3-4`
echo expid=$expid id=$id

cwd=`dirname $0`
echo cwd=$cwd

#. $cwd/setbase
basebin=$cwd

#echo basesource=$basesource
#echo baseoutput=$baseoutput
echo basebin=$basebin

#comgens=$baseoutput/..
#echo comgens=$comgens

echo
echo watch for jobs
echo

(( interval = 601 ))
if (( $# > 0 )); then
  (( interval = $1 ))
fi
(( time = 0 ))
(( timemax = 86400 * 30 ))
while (( time < timemax ))
do

  machl=`uname -n | cut -c1`
  machstring="c1n6 c2n6"
  machstring="s1n6 s2n6"
  machstring="c1n6 c2n6 s1n6 s2n6"
  machstring="${machl}1n6 ${machl}2n6"
  typeset -R5 numproc

  echo all processes":  \c"
  for mach in $machstring
  do
    numproc=$((`ssh $mach 'ps -elf | grep -c $LOGNAME`))
    echo "$numproc=$mach \c"
  done
  echo

  echo hpss.put":       \c"
  for mach in $machstring
  do
    numproc=$((`ssh $mach 'ps -elf | grep "hpss\.put" | grep -v grep' | grep -c $LOGNAME`))
    echo "$numproc=$mach \c"
  done
  numproc=$((`ls -1 /ptmp/$LOGNAME/crontask/new | wc -l`))
  echo "$numproc=queue"

  cd $cwd
  $basebin/space.global
  $basebin/llqww -a

  sleep $interval
  echo
  (( time = time + interval ))
done
